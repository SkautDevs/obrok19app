RewriteEngine On

# disable directory browsing - make lebeda sick :(
#Options All -Indexes

# blacklist all sensitive extensions
<Files ~ "\.(sql|sqlite|db|log)$">
   order deny,allow
   deny from all
</Files>

# whitelist of accessible extensions - not working now
#order allow,deny
#<FilesMatch ^.*[^.](?!\.(js|gif|jpg|jpeg|png|svg|webp|webm|ico|ttf|pdf|css|htm|html|txt|gz|php)).{3,3}$>
#	require all granted
#</FilesMatch>

# force HTTPS - not in localhost
RewriteCond %{HTTP_HOST} !=localhost
RewriteCond %{HTTP_HOST} !=127.0.0.1
RewriteCond %{HTTP_HOST} !=::1
RewriteCond %{HTTPS} !=on
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Some hosts may require you to use the `RewriteBase` directive.
# Determine the RewriteBase automatically and set it as environment variable.
# If you are using Apache aliases to do mass virtual hosting or installed the
# project in a subdirectory, the base path will be prepended to allow proper
# resolution of the index.php file and to redirect to the correct URI. It will
# work in environments without path prefix as well, providing a safe, one-size
# fits all solution. But as you do not need it in this case, you can comment
# the following lines to eliminate the overhead.

RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$
RewriteRule ^(.*) - [E=BASE:%1]

# If the above doesn't work you might need to set the `RewriteBase` directive manually, it should be the
# absolute physical path to the directory that contains this htaccess file.
# RewriteBase /

# redirect all into index.php
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteRule ^ index.php [QSA,L]
